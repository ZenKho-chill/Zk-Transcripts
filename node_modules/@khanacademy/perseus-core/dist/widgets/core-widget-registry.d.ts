import type { PublicWidgetOptionsFunction } from "./logic-export.types";
import type { Alignment } from "../types";
export declare function isWidgetRegistered(type: string): boolean;
export declare function getCurrentVersion(type: string): any;
export declare const getPublicWidgetOptionsFunction: (name: string) => PublicWidgetOptionsFunction;
export declare function getWidgetOptionsUpgrades(type: string): any;
export declare function getDefaultWidgetOptions(type: string): any;
/**
 * Handling for the optional alignments for widgets
 * See widget-container.jsx for details on how alignments are implemented.
 */
/**
 * Returns the list of supported alignments for the given (string) widget
 * type. This is used primarily at editing time to display the choices
 * for the user.
 *
 * Supported alignments are given as an array of strings in the exports of
 * a widget's module.
 */
export declare const getSupportedAlignments: (type: string) => ReadonlyArray<Alignment>;
/**
 * For the given (string) widget type, determine the default alignment for
 * the widget. This is used at rendering time to go from "default" alignment
 * to the actual alignment displayed on the screen.
 *
 * The default alignment is given either as a string (called
 * `defaultAlignment`) or a function (called `getDefaultAlignment`) on
 * the exports of a widget's module.
 */
export declare const getDefaultAlignment: (type: string) => Alignment;
